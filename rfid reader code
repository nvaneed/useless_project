#include <SPI.h>
#include <MFRC522.h>
#include <Arduino.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <WiFiClientSecure.h>

#define RST_PIN  4      // RC522 RST
#define SS_PIN   5      // RC522 SDA
#define LED_PIN  2      // Green LED (authorized)
#define LED_UNK  22     // Red LED (unauthorized) <-- Connect an LED to GPIO15

MFRC522 mfrc522(SS_PIN, RST_PIN);
MFRC522::MIFARE_Key key;
MFRC522::StatusCode status;

int blockNum = 2;
byte bufferLen = 18;
byte readBlockData[18];

String card_holder_name;

// Your 3 Google Sheet links
const String LINK_1 = "https://script.google.com/macros/s/AKfycbzjBNPXKcDa2NrizQqOgLgAu959FlrHbtw12FX--QL2D91VJDjhDaqTq9RpupeH2Rf3sA/exec?mode=esp32&name=NAVANEETH";
const String LINK_2 = "https://script.google.com/macros/s/AKfycbzjBNPXKcDa2NrizQqOgLgAu959FlrHbtw12FX--QL2D91VJDjhDaqTq9RpupeH2Rf3sA/exec?mode=esp32&name=DEVINA";
const String LINK_3 = "https://script.google.com/macros/s/AKfycbzjBNPXKcDa2NrizQqOgLgAu959FlrHbtw12FX--QL2D91VJDjhDaqTq9RpupeH2Rf3sA/exec?mode=esp32&name=RINSHA";

#define WIFI_SSID "nvaned"
#define WIFI_PASSWORD "123123123"

void setup() {
  Serial.begin(115200);
  pinMode(LED_PIN, OUTPUT);
  pinMode(LED_UNK, OUTPUT);
  digitalWrite(LED_PIN, LOW);
  digitalWrite(LED_UNK, HIGH);

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.println("Connecting to WiFi...");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(300);
  }
  Serial.println("\nWiFi Connected!");
  Serial.println(WiFi.localIP());

  SPI.begin();
  mfrc522.PCD_Init();
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent()) return;
  if (!mfrc522.PICC_ReadCardSerial()) return;

  Serial.println("Card detected!");

  // Get UID
  byte* uid = mfrc522.uid.uidByte;
  byte uidLength = mfrc522.uid.size;

  String uidStr = "";
  for (byte i = 0; i < uidLength; i++) {
    uidStr += String(uid[i] < 0x10 ? "0" : "") + String(uid[i], HEX);
    if (i < uidLength - 1) uidStr += " ";
  }

  uidStr.toUpperCase();
  Serial.print("UID: ");
  Serial.println(uidStr);

  String link = "";
  if (uidStr == "03 91 3A 1A") {
    link = LINK_1;
  } else if (uidStr == "53 B2 23 28") {
    link = LINK_2;
  } else if (uidStr == "A3 18 F1 13") {
    link = LINK_3;
  }

  if (link == "") {
    Serial.println("Unauthorized card detected.");
    digitalWrite(LED_UNK, LOW);
    delay(8000);
    digitalWrite(LED_UNK, HIGH);
    return;
  }

  // Blink green LED for access
  Serial.println("Authorized card!");
  digitalWrite(LED_PIN, HIGH);
  delay(300);
  digitalWrite(LED_PIN, LOW);
  delay(300);
  digitalWrite(LED_PIN, HIGH);
  delay(300);
  digitalWrite(LED_PIN, LOW);

  // Read data
  ReadDataFromBlock(blockNum, readBlockData);
  Serial.print("Card Data: ");
  for (int i = 0; i < 16; i++) Serial.write(readBlockData[i]);
  Serial.println();

  // Send request
  if (WiFi.status() == WL_CONNECTED) {
    WiFiClientSecure client;
    client.setInsecure();
    HTTPClient https;
    if (https.begin(client, link)) {
      int httpCode = https.GET();
      Serial.printf("HTTPS GET code: %d\n", httpCode);
      https.end();
    } else {
      Serial.println("HTTPS connection failed");
    }
  }

  delay(2000);
}

void ReadDataFromBlock(int blockNum, byte readBlockData[]) {
  for (byte i = 0; i < 6; i++) key.keyByte[i] = 0xFF;

  status = mfrc522.PCD_Authenticate(MFRC522::PICC_CMD_MF_AUTH_KEY_A, blockNum, &key, &(mfrc522.uid));
  if (status != MFRC522::STATUS_OK) {
    Serial.println("Authentication failed");
    return;
  }

  status = mfrc522.MIFARE_Read(blockNum, readBlockData, &bufferLen);
  if (status != MFRC522::STATUS_OK) {
    Serial.println("Reading failed");
    return;
  }
}

